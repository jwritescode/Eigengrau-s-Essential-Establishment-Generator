:: FactionProfile
<h1>$currentFaction.name</h1>$currentFaction.name is a $currentFaction.type guild. It's $currentFaction.age, and the $currentFaction.size faction has a $currentFaction.reputation reputation. Its resources are $currentFaction.resources, and it is motivated by $currentFaction.motivation.
<<set _leader to $currentFaction.leader>>
<h3>Governance</h3>It's ruled by <<nobr>>
<<switch $currentFaction.leadershipType>>
  <<case "group">>
  The $currentFaction.leaderGroupTitle of $currentFaction.leaderGroupSizeRoll, who were $currentFaction.leaderQualification. They are $currentFaction.leaderCompetence, and their positions on the $currentFaction.leaderGroupTitle are $currentFaction.stability<<if def $currentFaction.stabilityCause>> due to $currentFaction.stabilityCause<</if>>. Their meetings are held $currentFaction.meetingRegularity, and are $currentFaction.meetingAccessibility. Bribes to the $currentFaction.leaderGroupTitle $currentFaction.leaderBribes.
  <<default>>
  <<profile $currentFaction.leader>>, who was $currentFaction.leaderQualification. <<print _leader.heshe.toUpperFirst()>> is $currentFaction.leaderCompetence, and _leader.hisher position is $currentFaction.stability<<if def $currentFaction.stabilityCause>> due to $currentFaction.stabilityCause<</if>>. Bribes $currentFaction.leaderBribes.
<</switch>>
<</nobr>>
<h3>Members</h3>Members of $currentFaction.name are identifiable by $currentFaction.membersTrait. Membership requires $currentFaction.joiningRequirement, and costs $currentFaction.joiningFee. The initiation into $currentFaction.name involves $currentFaction.joiningInitiation.
<h3>Politics</h3>$currentFaction.name have $currentFaction.alliesDescription; <<nobr>>

<<if $currentFaction.allies.length == 2>>
    <<print $currentFaction.allies[0].toUpperFirst()>> and $currentFaction.allies[1] can be called on for aid.
  <<elseif $currentFaction.allies.length == 1>>
    $currentFaction.allies are the only others they can rely on.
  <<else>>
    <<print $currentFaction.allies[0].toUpperFirst()>>
    <<print either(
        "will answer a call for aid, as will ",
        "regularly assist $currentFaction.name. At their disposal, they also have ",
        "will help if called upon, as will "
    )>>
    <<for _allies range $currentFaction.allies.slice(1, -1)>>
        _allies,
    <</for>>
    and <<print $currentFaction.allies[$currentFaction.allies.length - 1]>>
<</if>><</nobr>>

<<back>>
